package.frc.robot;

import edu.wpi.first.networktables.NetworkTable;
import edu.wpi.first.networktables.NetworkTableEntry;
import edu.wpi.first.networktables.NetworkTableInstance;
import com.ctre.phoenix.CANifier;
import com.ctre.phoenix.CANifier.LEDChannel;
import com.ctre.phoenix.CANifier.LEDPulseTime;
import com.ctre.phoenix.CANifier.LEDThrottleTime;
import com.ctre.phoenix.CANifier.PWMChannel;
import com.ctre.phoenix.CANifierStatusFrame;
import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.can.TalonSRX;
import edu.wpi.first.wpilibj.TimedRobot;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.cameraserver.CameraServer;
import org.opencv.core.Mat;
import org.opencv.core.Scalar;
import org.opencv.core.Size;
import org.opencv.imgproc.Imgproc;
import org.opencv.videoio.VideoCapture;
import org.opencv.videoio.Videoio;
import edu.wpi.first.cameraserver.CameraServer;
import com.arcrobotics.ftclib.vision.Limelight;

public class LimelightPipeline {

  Limelight limelight = new Limelight();
  limelight.enable();

  NetworkTable table = NetworkTableInstance.getDefault().getTable("limelight");
  NetworkTableEntry tv = table.getEntry("tv");
  NetworkTableEntry tx = table.getEntry("tx");
  NetworkTableEntry ty = table.getEntry("ty");
  NetworkTableEntry ta = table.getEntry("ta");
  NetworkTableEntry tapePipeline = table.getEntry("pipeline").setNumber(<0>);
  NetworkTableEntry tagPipelineRed = table.getEntry("pipeline").setNumber(<1>);
  NetworkTableEntry tagPipelineBlue = table.getEntry("pipeline").setNumber(<2>);

  table.getEntry("camMode").setNumber(0);
  int imageWidth = (int) table.getEntry("camWidth").getDouble();
  int imageHeight = (int) table.getEntry("camHeight").getDouble();
  Mat image = new Mat();
  VideoCapture camera = new VideoCapture(0);

  while (true) {
    if (camera.read(image)) {
        // Process the image with your pipeline code
        // For example, you could use OpenCV to apply image filters
        Imgproc.cvtColor(image, image, Imgproc.COLOR_BGR2HSV);

        // Display the processed image on the dashboard
        SmartDashboard.putNumber("Image Width", image.width());
        SmartDashboard.putNumber("Image Height", image.height());
        CameraServer.getInstance().putVideo("Processed Image", image);
    }
}


}